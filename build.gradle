buildscript {
	dependencies {
		classpath("org.flywaydb:flyway-mysql:11.3.1")
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.bmuschko.docker-spring-boot-application' version '9.4.0'
	id 'jacoco'
	id("org.flywaydb.flyway") version "11.3.1"
}

group = 'com.chrisp1985'
version = '1.0.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

sourceSets {
	integrationTest {
		compileClasspath += sourceSets.main.output + sourceSets.test.output
		runtimeClasspath += sourceSets.main.output + sourceSets.test.output
	}
	main {
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


ext {
	set('springCloudVersion', "2021.0.9")
	set('testcontainersVersion', "1.20.4")
}

repositories {
	mavenCentral()
	maven {
		url 'https://packages.confluent.io/maven/'
	}
	maven {
		url "https://plugins.gradle.org/m2/"
	}
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly("org.springframework.boot:spring-boot-devtools")

	// Data
	implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'io.asyncer', name: 'r2dbc-mysql', version: '1.3.2'

	// Flyway
	implementation 'org.flywaydb:flyway-core:11.3.1'
	implementation 'com.mysql:mysql-connector-j:9.2.0'
	implementation 'org.flywaydb:flyway-mysql:11.3.1'
	runtimeOnly 'org.flywaydb:flyway-gradle-plugin:11.3.1'

	// Extras
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation group: 'org.aspectj', name: 'aspectjrt', version: '1.9.22.1'
	implementation group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.22.1'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// https://mvnrepository.com/artifact/io.asyncer/r2dbc-mysql
	testImplementation group: 'io.asyncer', name: 'r2dbc-mysql', version: '1.3.2'


	// Integration Test
	integrationTestImplementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
	integrationTestImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	integrationTestImplementation 'org.springframework.boot:spring-boot-starter-aop'
	integrationTestImplementation 'io.projectreactor:reactor-test'
	integrationTestImplementation 'org.mockito:mockito-core:2.22.0'
	integrationTestImplementation 'org.testcontainers:junit-jupiter'
	integrationTestImplementation 'org.testcontainers:mysql'
	integrationTestImplementation 'org.testcontainers:r2dbc'
	integrationTestRuntimeOnly 'org.springframework:spring-jdbc'
	integrationTestRuntimeOnly 'com.mysql:mysql-connector-j'
	integrationTestImplementation group: 'io.asyncer', name: 'r2dbc-mysql', version: '1.3.2'

}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacocoTestCoverageVerification {
	dependsOn jacocoTestReport
	violationRules {
		rule {
			limit {
				minimum = 0.85
			}
		}
	}
}

docker {
	springBootApplication {
		baseImage = 'openjdk:17.0.1-jdk-slim'

		images = ["$build_image_name:latest"]
		jvmArgs = ['-Dspring.profiles.active=prod', '-Xmx2048m']
	}
}

flyway {
	url = 'jdbc:mysql://localhost:3306/mydb'  // âœ… Matches application.yml
	user = 'root'
	password = 'mypassword'
}